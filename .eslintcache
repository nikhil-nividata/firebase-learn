[{"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\index.js":"1","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\reportWebVitals.js":"2","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\App.jsx":"3","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\common\\navbar\\index.jsx":"4","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\router\\index.jsx":"5","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\signUp\\index.jsx":"6","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\login\\index.jsx":"7","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\index.jsx":"8","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\createPost\\index.jsx":"9","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\postView\\index.jsx":"10"},{"size":1002,"mtime":1608811667912,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":718,"mtime":1608803252289,"results":"14","hashOfConfig":"12"},{"size":855,"mtime":1608802258277,"results":"15","hashOfConfig":"12"},{"size":591,"mtime":1608801938334,"results":"16","hashOfConfig":"12"},{"size":2786,"mtime":1608801825985,"results":"17","hashOfConfig":"12"},{"size":1394,"mtime":1608801821292,"results":"18","hashOfConfig":"12"},{"size":1208,"mtime":1609148325058,"results":"19","hashOfConfig":"12"},{"size":3163,"mtime":1609146990328,"results":"20","hashOfConfig":"12"},{"size":1091,"mtime":1609153256547,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hg9f15",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\index.js",[],["46","47"],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\reportWebVitals.js",[],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\App.jsx",["48"],"import React, { Component } from \"react\";\nimport \"materialize-css\";\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\nimport Navbar from \"./components/common/navbar\";\nimport styles from \"./App.module.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./router\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.authWatch();\n  }\n\n  authWatch = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      console.log(\"Auth State Changed \", user);\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Routes />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\common\\navbar\\index.jsx",[],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\router\\index.jsx",[],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\signUp\\index.jsx",["49","50"],"import Styles from \"./index.module.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Row, Col, TextInput, Button } from \"react-materialize\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        <Col m={2}></Col>\r\n        <Col m={8}>\r\n          <Card>\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\r\n              validationSchema={Yup.object({\r\n                email: Yup.string()\r\n                  .email(\"Not a valid email address\")\r\n                  .required(\"Email is required\"),\r\n                password: Yup.string()\r\n                  .min(6, \"Password must be atleast 6 characters long\")\r\n                  .required(\"Password Required\"),\r\n                confirmPassword: Yup.string().required(\r\n                  \"Please re-enter your password\"\r\n                ),\r\n              })}\r\n              validate={(values) => {\r\n                if (values.confirmPassword !== values.password) {\r\n                  return {\r\n                    confirmPassword: \"Passwords do not match\",\r\n                  };\r\n                }\r\n              }}\r\n              onSubmit={async (values, { resetForm }) => {\r\n                const { email, password } = values;\r\n                try {\r\n                  const user = await firebase\r\n                    .auth()\r\n                    .createUserWithEmailAndPassword(email, password);\r\n                  resetForm();\r\n                  history.push(\"/login\");\r\n                } catch (error) {}\r\n              }}\r\n            >\r\n              <Form>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" type=\"email\" />\r\n                <p className={Styles.errorMessage}>\r\n                  <ErrorMessage name=\"email\" />\r\n                </p>\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field name=\"password\" type=\"password\" />\r\n                <p className={Styles.errorMessage}>\r\n                  <ErrorMessage name=\"password\" />\r\n                </p>\r\n\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <Field name=\"confirmPassword\" type=\"password\" />\r\n                <p className={Styles.errorMessage}>\r\n                  <ErrorMessage name=\"confirmPassword\" />\r\n                </p>\r\n\r\n                <Button type=\"submit\">Sign Up</Button>\r\n              </Form>\r\n            </Formik>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\login\\index.jsx",["51","52","53"],"import React from \"react\";\r\nimport { Card, Row, Col, TextInput, Button } from \"react-materialize\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        <Col m={2}></Col>\r\n        <Col m={8}>\r\n          <Card>\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              onSubmit={async (values, { resetForm }) => {\r\n                const { email, password } = values;\r\n                try {\r\n                  const user = await firebase\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email, password);\r\n                  resetForm();\r\n                  history.push(\"/\");\r\n                } catch (error) {}\r\n              }}\r\n            >\r\n              <Form>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" type=\"email\" />\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field name=\"password\" type=\"password\" />\r\n                <Button type=\"submit\">Login</Button>\r\n              </Form>\r\n            </Formik>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\index.jsx",["54"],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\createPost\\index.jsx",["55","56","57","58","59"],"C:\\Users\\nikhi\\Desktop\\friebase-learn\\src\\components\\homepage\\postView\\index.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":4,"column":26,"nodeType":"66","messageId":"67","endLine":4,"endColumn":35},{"ruleId":"64","severity":1,"message":"69","line":41,"column":25,"nodeType":"66","messageId":"67","endLine":41,"endColumn":29},{"ruleId":"64","severity":1,"message":"68","line":2,"column":26,"nodeType":"66","messageId":"67","endLine":2,"endColumn":35},{"ruleId":"64","severity":1,"message":"70","line":3,"column":31,"nodeType":"66","messageId":"67","endLine":3,"endColumn":43},{"ruleId":"64","severity":1,"message":"69","line":21,"column":25,"nodeType":"66","messageId":"67","endLine":21,"endColumn":29},{"ruleId":"64","severity":1,"message":"71","line":2,"column":18,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"64","severity":1,"message":"72","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"73","line":2,"column":18,"nodeType":"66","messageId":"67","endLine":2,"endColumn":23},{"ruleId":"64","severity":1,"message":"70","line":2,"column":25,"nodeType":"66","messageId":"67","endLine":2,"endColumn":37},{"ruleId":"64","severity":1,"message":"74","line":2,"column":39,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},{"ruleId":"64","severity":1,"message":"75","line":24,"column":15,"nodeType":"66","messageId":"67","endLine":24,"endColumn":23},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'TextInput' is defined but never used.","'user' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'Modal' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]